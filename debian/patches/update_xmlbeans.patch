--- a/soapui/pom.xml
+++ b/soapui/pom.xml
@@ -67,7 +67,7 @@
                 </executions>
                 <inherited>true</inherited>
                 <configuration>
-                    <javaSource>1.5</javaSource>
+                    <javaSource>1.6</javaSource>
                     <verbose>false</verbose>
                     <schemaDirectory>src/main/xsd</schemaDirectory>
                 </configuration>
--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/mock/RestMockService.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/mock/RestMockService.java
@@ -31,6 +31,7 @@
 import com.eviware.soapui.model.project.Project;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
 import static com.eviware.soapui.impl.rest.RestRequestInterface.HttpMethod;
@@ -47,7 +48,7 @@
     public RestMockService(Project project, RESTMockServiceConfig config) {
         super(config, project, ICON_NAME);
 
-        List<RESTMockActionConfig> restActionConfigList = config.getRestMockActionList();
+        List<RESTMockActionConfig> restActionConfigList = Arrays.asList(config.getRestMockActionArray());
         for (RESTMockActionConfig restActionConfig : restActionConfigList) {
             RestMockAction restMockAction = new RestMockAction(this, restActionConfig);
             addMockOperation(restMockAction);
@@ -159,7 +160,7 @@
     }
 
     public boolean canIAddAMockOperation(RestMockAction mockOperation) {
-        return this.getConfig().getRestMockActionList().contains(mockOperation.getConfig());
+        return Arrays.asList(this.getConfig().getRestMockActionArray()).contains(mockOperation.getConfig());
     }
 
     @Override
--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/mock/RestMockAction.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/mock/RestMockAction.java
@@ -35,6 +35,8 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
+
+import java.util.Arrays;
 import java.util.List;
 
 public class RestMockAction extends AbstractMockOperation<RESTMockActionConfig, RestMockResponse> implements HasHelpUrl {
@@ -45,7 +47,7 @@
 
         mockService.getMockOperationByName(config.getName());
 
-        List<RESTMockResponseConfig> responseConfigs = config.getResponseList();
+        List<RESTMockResponseConfig> responseConfigs = Arrays.asList(config.getResponseArray());
         for (RESTMockResponseConfig responseConfig : responseConfigs) {
             RestMockResponse restMockResponse = new RestMockResponse(this, responseConfig);
             restMockResponse.addPropertyChangeListener(this);
--- a/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractMockResponse.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractMockResponse.java
@@ -135,7 +135,7 @@
 
     public StringToStringsMap getResponseHeaders() {
         StringToStringsMap result = new StringToStringsMap();
-        List<HeaderConfig> headerList = getConfig().getHeaderList();
+        List<HeaderConfig> headerList = Arrays.asList(getConfig().getHeaderArray());
         for (HeaderConfig header : headerList) {
             result.add(header.getName(), header.getValue());
         }
--- a/soapui/src/main/java/com/eviware/soapui/security/support/SecurityCheckedParameterHolder.java
+++ b/soapui/src/main/java/com/eviware/soapui/security/support/SecurityCheckedParameterHolder.java
@@ -16,6 +16,7 @@
 package com.eviware.soapui.security.support;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
@@ -68,7 +69,7 @@
     public void updateConfig(CheckedParametersListConfig config) {
         paramsConfig = config;
 
-        List<CheckedParameterConfig> paramsList = config.getParametersList();
+        List<CheckedParameterConfig> paramsList = Arrays.asList(config.getParametersArray());
         for (int c = 0; c < paramsList.size(); c++) {
             if (params.get(c) instanceof SecurityCheckedParameterImpl) {
                 ((SecurityCheckedParameterImpl) params.get(c)).setConfig(paramsList.get(c));
--- a/soapui/src/main/java/com/eviware/soapui/support/types/StringToStringMap.java
+++ b/soapui/src/main/java/com/eviware/soapui/support/types/StringToStringMap.java
@@ -94,7 +94,7 @@
 
     public static StringToStringMap fromXml(StringToStringMapConfig nsMapping) {
         StringToStringMap result = new StringToStringMap();
-        for (StringToStringMapConfig.Entry entry : nsMapping.getEntryList()) {
+        for (StringToStringMapConfig.Entry entry : nsMapping.getEntryArray()) {
             result.put(entry.getKey(), entry.getValue());
         }
         return result;
--- a/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractHttpRequest.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractHttpRequest.java
@@ -58,6 +58,7 @@
 import java.io.IOException;
 import java.io.OutputStream;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
@@ -92,7 +93,7 @@
     }
 
     private void initAttachments() {
-        for (AttachmentConfig ac : getConfig().getAttachmentList()) {
+        for (AttachmentConfig ac : getConfig().getAttachmentArray()) {
             RequestFileAttachment attachment = new RequestFileAttachment(ac, this);
             attachments.add(attachment);
         }
@@ -521,7 +522,7 @@
         Set<String> authTypes = new HashSet<String>();
         CredentialsConfig credentialsConfig = getConfig().getCredentials();
         if (credentialsConfig != null) {
-            for (String type : credentialsConfig.getAddedBasicAuthenticationTypesList()) {
+            for (String type : Arrays.asList(credentialsConfig.getAddedBasicAuthenticationTypesList())) {
                 if (AuthType.PREEMPTIVE.toString().equals(type)
                         || AuthType.GLOBAL_HTTP_SETTINGS.toString().equals(type)) {
                     authTypes.add(BASIC_AUTH_PROFILE);
@@ -557,7 +558,7 @@
     }
 
     public void addBasicAuthenticationProfile(String authType) {
-        List<String> addedBasicAuthenticationTypesList = getCredentialsConfig().getAddedBasicAuthenticationTypesList();
+        List<String> addedBasicAuthenticationTypesList = Arrays.asList(getCredentialsConfig().getAddedBasicAuthenticationTypesArray());
         if (!addedBasicAuthenticationTypesList.contains(authType)) {
             addedBasicAuthenticationTypesList.add(authType);
         }
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/WsdlMockService.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/WsdlMockService.java
@@ -70,7 +70,7 @@
     public WsdlMockService(Project project, MockServiceConfig config) {
         super(config, project, ICON_NAME);
 
-        List<MockOperationConfig> testStepConfigs = config.getMockOperationList();
+        List<MockOperationConfig> testStepConfigs = Arrays.asList(config.getMockOperationArray());
         for (MockOperationConfig tsc : testStepConfigs) {
             WsdlMockOperation testStep = new WsdlMockOperation(this, tsc);
             addMockOperation(testStep);
@@ -353,7 +353,7 @@
     }
 
     public boolean canIAddAMockOperation(WsdlMockOperation mockOperation) {
-        return this.getConfig().getMockOperationList().contains(mockOperation.getConfig());
+        return Arrays.asList(this.getConfig().getMockOperationArray()).contains(mockOperation.getConfig());
     }
 
     @Override
--- a/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractInterface.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractInterface.java
@@ -68,7 +68,7 @@
 
     public String[] getEndpoints() {
         EndpointsConfig endpoints = getConfig().getEndpoints();
-        List<String> endpointArray = endpoints.getEndpointList();
+        List<String> endpointArray = Arrays.asList(endpoints.getEndpointArray());
         Collections.sort(endpointArray);
         return endpointArray.toArray(new String[endpointArray.size()]);
     }
