--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/mock/RestMockService.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/mock/RestMockService.java
@@ -31,6 +31,7 @@
 import com.eviware.soapui.model.project.Project;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
 import static com.eviware.soapui.impl.rest.RestRequestInterface.HttpMethod;
@@ -47,7 +48,7 @@
     public RestMockService(Project project, RESTMockServiceConfig config) {
         super(config, project, ICON_NAME);
 
-        List<RESTMockActionConfig> restActionConfigList = config.getRestMockActionList();
+        List<RESTMockActionConfig> restActionConfigList = Arrays.asList(config.getRestMockActionArray());
         for (RESTMockActionConfig restActionConfig : restActionConfigList) {
             RestMockAction restMockAction = new RestMockAction(this, restActionConfig);
             addMockOperation(restMockAction);
@@ -159,7 +160,7 @@
     }
 
     public boolean canIAddAMockOperation(RestMockAction mockOperation) {
-        return this.getConfig().getRestMockActionList().contains(mockOperation.getConfig());
+        return Arrays.asList(this.getConfig().getRestMockActionArray()).contains(mockOperation.getConfig());
     }
 
     @Override
--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/mock/RestMockAction.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/mock/RestMockAction.java
@@ -35,6 +35,8 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
+
+import java.util.Arrays;
 import java.util.List;
 
 public class RestMockAction extends AbstractMockOperation<RESTMockActionConfig, RestMockResponse> implements HasHelpUrl {
@@ -45,7 +47,7 @@
 
         mockService.getMockOperationByName(config.getName());
 
-        List<RESTMockResponseConfig> responseConfigs = config.getResponseList();
+        List<RESTMockResponseConfig> responseConfigs = Arrays.asList(config.getResponseArray());
         for (RESTMockResponseConfig responseConfig : responseConfigs) {
             RestMockResponse restMockResponse = new RestMockResponse(this, responseConfig);
             restMockResponse.addPropertyChangeListener(this);
--- a/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractMockResponse.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractMockResponse.java
@@ -135,7 +135,7 @@
 
     public StringToStringsMap getResponseHeaders() {
         StringToStringsMap result = new StringToStringsMap();
-        List<HeaderConfig> headerList = getConfig().getHeaderList();
+        List<HeaderConfig> headerList = Arrays.asList(getConfig().getHeaderArray());
         for (HeaderConfig header : headerList) {
             result.add(header.getName(), header.getValue());
         }
--- a/soapui/src/main/java/com/eviware/soapui/security/support/SecurityCheckedParameterHolder.java
+++ b/soapui/src/main/java/com/eviware/soapui/security/support/SecurityCheckedParameterHolder.java
@@ -16,6 +16,7 @@
 package com.eviware.soapui.security.support;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
@@ -50,7 +51,7 @@
         this.securityCheck = securityCheck;
         this.paramsConfig = checkedPameters;
 
-        for (CheckedParameterConfig param : paramsConfig.getParametersList()) {
+        for (CheckedParameterConfig param : Arrays.asList(paramsConfig.getParametersArray())) {
             addParameter(param);
         }
 
@@ -68,7 +69,7 @@
     public void updateConfig(CheckedParametersListConfig config) {
         paramsConfig = config;
 
-        List<CheckedParameterConfig> paramsList = config.getParametersList();
+        List<CheckedParameterConfig> paramsList = Arrays.asList(config.getParametersArray());
         for (int c = 0; c < paramsList.size(); c++) {
             if (params.get(c) instanceof SecurityCheckedParameterImpl) {
                 ((SecurityCheckedParameterImpl) params.get(c)).setConfig(paramsList.get(c));
--- a/soapui/src/main/java/com/eviware/soapui/impl/support/http/HttpRequest.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/support/http/HttpRequest.java
@@ -45,6 +45,7 @@
 
 import javax.xml.namespace.QName;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 
@@ -253,7 +254,7 @@
             params.resetPropertiesConfig(request.getParameters());
         }
 
-        List<AttachmentConfig> attachmentConfigs = getConfig().getAttachmentList();
+        List<AttachmentConfig> attachmentConfigs = Arrays.asList(getConfig().getAttachmentArray());
         for (int i = 0; i < attachmentConfigs.size(); i++) {
             AttachmentConfig config = attachmentConfigs.get(i);
             getAttachmentsList().get(i).updateConfig(config);
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/HttpTestRequest.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/HttpTestRequest.java
@@ -17,6 +17,7 @@
 package com.eviware.soapui.impl.wsdl.teststeps;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 
@@ -84,7 +85,7 @@
             }
 
             public List<TestAssertionConfig> getAssertionList() {
-                return getConfig().getAssertionList();
+                return Arrays.asList(getConfig().getAssertionArray());
             }
 
             public void removeAssertion(int ix) {
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlTestRequest.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlTestRequest.java
@@ -17,6 +17,7 @@
 package com.eviware.soapui.impl.wsdl.teststeps;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 
@@ -124,7 +125,7 @@
             }
 
             public List<TestAssertionConfig> getAssertionList() {
-                return getConfig().getAssertionList();
+                return Arrays.asList(getConfig().getAssertionArray());
             }
 
             public void removeAssertion(int ix) {
@@ -322,7 +323,7 @@
 
         assertionsSupport.refresh();
 
-        List<AttachmentConfig> attachmentConfigs = getConfig().getAttachmentList();
+        List<AttachmentConfig> attachmentConfigs = Arrays.asList(getConfig().getAttachmentArray());
         for (int i = 0; i < attachmentConfigs.size(); i++) {
             AttachmentConfig config = attachmentConfigs.get(i);
             getAttachmentsList().get(i).updateConfig(config);
--- a/soapui/src/main/java/com/eviware/soapui/security/scan/AbstractSecurityScan.java
+++ b/soapui/src/main/java/com/eviware/soapui/security/scan/AbstractSecurityScan.java
@@ -125,7 +125,7 @@
         getConfig().setConfig(config.getConfig());
         getConfig().setTestStep(config.getTestStep());
 
-        TestAssertionConfig[] assertions = config.getAssertionList().toArray(new TestAssertionConfig[0]);
+        TestAssertionConfig[] assertions = config.getAssertionArray();
         getConfig().setAssertionArray(assertions);
         initAssertions();
 
@@ -157,7 +157,7 @@
             }
 
             public List<TestAssertionConfig> getAssertionList() {
-                return getConfig().getAssertionList();
+                return Arrays.asList(getConfig().getAssertionArray());
             }
 
             public void removeAssertion(int ix) {
--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/support/XmlBeansRestParamsTestPropertyHolder.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/support/XmlBeansRestParamsTestPropertyHolder.java
@@ -74,7 +74,7 @@
         this.config = config;
         this.defaultParamLocation = defaultParamLocation;
 
-        for (RestParameterConfig propertyConfig : config.getParameterList()) {
+        for (RestParameterConfig propertyConfig : Arrays.asList(config.getParameterArray())) {
             addProperty(propertyConfig, false);
         }
 
@@ -420,7 +420,7 @@
         }
 
         public String[] getOptions() {
-            return propertyConfig.getOptionList().toArray(new String[propertyConfig.sizeOfOptionArray()]);
+            return propertyConfig.getOptionArray();
         }
 
         public boolean getRequired() {
--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/support/RestRequestParamsPropertyHolder.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/support/RestRequestParamsPropertyHolder.java
@@ -63,9 +63,9 @@
     private void buildPropertyNameList() {
         RestRequestConfig requestConfig = restRequest.getConfig();
         List<String> propertyNames;
-        List<String> methodParamNames = new ArrayList<String>(Arrays.asList(methodParams.getPropertyNames()));
+        List<String> methodParamNames = Arrays.asList(methodParams.getPropertyNames());
         if (requestConfig.isSetParameterOrder()) {
-            propertyNames = new ArrayList<String>(requestConfig.getParameterOrder().getEntryList());
+            propertyNames = Arrays.asList(requestConfig.getParameterOrder().getEntryArray());
             propertyNames.retainAll(methodParamNames);
             methodParamNames.removeAll(propertyNames);
             propertyNames.addAll(methodParamNames);
@@ -298,7 +298,7 @@
         if (renamePerformed) {
             RestRequestConfig requestConfig = restRequest.getConfig();
             if (requestConfig.isSetParameterOrder()) {
-                List<String> entryList = requestConfig.getParameterOrder().getEntryList();
+                List<String> entryList = Arrays.asList(requestConfig.getParameterOrder().getEntryArray());
                 for (int i = 0; i < entryList.size(); i++) {
                     if (entryList.get(i).equals(name)) {
                         requestConfig.getParameterOrder().setEntryArray(i, newName);
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlMessageAssertion.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlMessageAssertion.java
@@ -41,6 +41,7 @@
 import org.apache.xmlbeans.XmlObject;
 
 import javax.swing.ImageIcon;
+import java.util.Arrays;
 import java.util.List;
 
 /**
@@ -413,8 +414,8 @@
     @Override
     public int getIndexOfAssertion(TestAssertion assertion) {
         if (getConfig() instanceof GroupAssertionListConfig) {
-            List<AssertionEntryConfig> assertionEntryConfigList = ((GroupAssertionListConfig) getConfig())
-                    .getAssertionsList();
+            List<AssertionEntryConfig> assertionEntryConfigList = Arrays.asList(((GroupAssertionListConfig) getConfig())
+                    .getAssertionsArray());
             return assertionEntryConfigList.indexOf(((WsdlMessageAssertion) assertion).getConfig());
         } else {
             return -1;
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/RestTestRequest.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/RestTestRequest.java
@@ -41,6 +41,7 @@
 
 import javax.swing.ImageIcon;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 
@@ -99,7 +100,7 @@
             }
 
             public List<TestAssertionConfig> getAssertionList() {
-                return getConfig().getAssertionList();
+                return Arrays.asList(getConfig().getAssertionArray());
             }
 
             public void removeAssertion(int ix) {
--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/RestRequest.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/RestRequest.java
@@ -56,6 +56,7 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 
@@ -444,7 +445,7 @@
 
         updateParams();
 
-        List<AttachmentConfig> attachmentConfigs = getConfig().getAttachmentList();
+        List<AttachmentConfig> attachmentConfigs = Arrays.asList(getConfig().getAttachmentArray());
         for (int i = 0; i < attachmentConfigs.size(); i++) {
             AttachmentConfig config = attachmentConfigs.get(i);
             getAttachmentsList().get(i).updateConfig(config);
--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/RestService.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/RestService.java
@@ -17,6 +17,7 @@
 package com.eviware.soapui.impl.rest;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -45,7 +46,7 @@
     public RestService(WsdlProject project, RestServiceConfig serviceConfig) {
         super(serviceConfig, project, "/rest_service.png");
 
-        for (RestResourceConfig resourceConfig : serviceConfig.getResourceList()) {
+        for (RestResourceConfig resourceConfig : Arrays.asList(serviceConfig.getResourceArray())) {
             resources.add(new RestResource(this, resourceConfig));
         }
 
--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/RestMethod.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/RestMethod.java
@@ -70,13 +70,13 @@
 
         params = new XmlBeansRestParamsTestPropertyHolder(this, methodConfig.getParameters());
 
-        for (RestResourceRepresentationConfig config : methodConfig.getRepresentationList()) {
+        for (RestResourceRepresentationConfig config : Arrays.asList(methodConfig.getRepresentationArray())) {
             RestRepresentation representation = new RestRepresentation(this, config);
             representations.add(representation);
             notifyPropertyChanged("representations", null, representation);
         }
 
-        for (RestRequestConfig config : methodConfig.getRequestList()) {
+        for (RestRequestConfig config : Arrays.asList(methodConfig.getRequestArray())) {
             RestRequest request = new RestRequest(this, config, false);
             requests.add(request);
             notifyPropertyChanged("childRequests", null, request);
--- a/soapui/src/main/java/com/eviware/soapui/support/types/StringToStringMap.java
+++ b/soapui/src/main/java/com/eviware/soapui/support/types/StringToStringMap.java
@@ -16,6 +16,7 @@
 
 package com.eviware.soapui.support.types;
 
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -94,7 +95,7 @@
 
     public static StringToStringMap fromXml(StringToStringMapConfig nsMapping) {
         StringToStringMap result = new StringToStringMap();
-        for (StringToStringMapConfig.Entry entry : nsMapping.getEntryList()) {
+        for (StringToStringMapConfig.Entry entry : Arrays.asList(nsMapping.getEntryArray())) {
             result.put(entry.getKey(), entry.getValue());
         }
         return result;
--- a/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractHttpRequest.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/support/AbstractHttpRequest.java
@@ -58,6 +58,7 @@
 import java.io.IOException;
 import java.io.OutputStream;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
@@ -92,7 +93,7 @@
     }
 
     private void initAttachments() {
-        for (AttachmentConfig ac : getConfig().getAttachmentList()) {
+        for (AttachmentConfig ac : Arrays.asList(getConfig().getAttachmentArray())) {
             RequestFileAttachment attachment = new RequestFileAttachment(ac, this);
             attachments.add(attachment);
         }
@@ -521,7 +522,7 @@
         Set<String> authTypes = new HashSet<String>();
         CredentialsConfig credentialsConfig = getConfig().getCredentials();
         if (credentialsConfig != null) {
-            for (String type : credentialsConfig.getAddedBasicAuthenticationTypesList()) {
+            for (String type : Arrays.asList(credentialsConfig.getAddedBasicAuthenticationTypesArray())) {
                 if (AuthType.PREEMPTIVE.toString().equals(type)
                         || AuthType.GLOBAL_HTTP_SETTINGS.toString().equals(type)) {
                     authTypes.add(BASIC_AUTH_PROFILE);
@@ -557,7 +558,7 @@
     }
 
     public void addBasicAuthenticationProfile(String authType) {
-        List<String> addedBasicAuthenticationTypesList = getCredentialsConfig().getAddedBasicAuthenticationTypesList();
+        List<String> addedBasicAuthenticationTypesList = Arrays.asList(getCredentialsConfig().getAddedBasicAuthenticationTypesArray());
         if (!addedBasicAuthenticationTypesList.contains(authType)) {
             addedBasicAuthenticationTypesList.add(authType);
         }
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/WsdlMockService.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/WsdlMockService.java
@@ -70,7 +70,7 @@
     public WsdlMockService(Project project, MockServiceConfig config) {
         super(config, project, ICON_NAME);
 
-        List<MockOperationConfig> testStepConfigs = config.getMockOperationList();
+        List<MockOperationConfig> testStepConfigs = Arrays.asList(config.getMockOperationArray());
         for (MockOperationConfig tsc : testStepConfigs) {
             WsdlMockOperation testStep = new WsdlMockOperation(this, tsc);
             addMockOperation(testStep);
@@ -353,7 +353,7 @@
     }
 
     public boolean canIAddAMockOperation(WsdlMockOperation mockOperation) {
-        return this.getConfig().getMockOperationList().contains(mockOperation.getConfig());
+        return Arrays.asList(this.getConfig().getMockOperationArray()).contains(mockOperation.getConfig());
     }
 
     @Override
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/WsdlMockOperation.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/WsdlMockOperation.java
@@ -42,6 +42,7 @@
 import java.beans.PropertyChangeEvent;
 import java.io.File;
 import java.io.IOException;
+import java.util.Arrays;
 import java.util.List;
 
 /**
@@ -74,7 +75,7 @@
             operation = (WsdlOperation) iface.getOperationByName(config.getOperation());
         }
 
-        List<MockResponseConfig> responseConfigs = config.getResponseList();
+        List<MockResponseConfig> responseConfigs = Arrays.asList(config.getResponseArray());
         for (MockResponseConfig responseConfig : responseConfigs) {
             WsdlMockResponse wsdlMockResponse = new WsdlMockResponse(this, responseConfig);
             wsdlMockResponse.addPropertyChangeListener(this);
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/WsdlMockResponse.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/WsdlMockResponse.java
@@ -100,7 +100,7 @@
     public WsdlMockResponse(WsdlMockOperation operation, MockResponseConfig config) {
         super(config, operation, ICON_NAME);
 
-        for (AttachmentConfig ac : getConfig().getAttachmentList()) {
+        for (AttachmentConfig ac : Arrays.asList(getConfig().getAttachmentArray())) {
             attachments.add(new MockFileAttachment(ac, this));
         }
 
--- a/soapui/src/main/java/com/eviware/soapui/support/types/StringToStringsMap.java
+++ b/soapui/src/main/java/com/eviware/soapui/support/types/StringToStringsMap.java
@@ -17,6 +17,7 @@
 package com.eviware.soapui.support.types;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -98,7 +99,7 @@
 
     public static StringToStringsMap fromXml(StringToStringMapConfig nsMapping) {
         StringToStringsMap result = new StringToStringsMap();
-        for (StringToStringMapConfig.Entry entry : nsMapping.getEntryList()) {
+        for (StringToStringMapConfig.Entry entry : Arrays.asList(nsMapping.getEntryArray())) {
             result.add(entry.getKey(), entry.getValue());
         }
         return result;
--- a/soapui/src/main/java/com/eviware/soapui/impl/rest/RestResource.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/rest/RestResource.java
@@ -79,15 +79,15 @@
             params.getProperty(name).addPropertyChangeListener(new StyleChangeListener());
         }
 
-        for (RestMethodConfig config : resourceConfig.getMethodList()) {
+        for (RestMethodConfig config : Arrays.asList(resourceConfig.getMethodArray())) {
             methods.add(new RestMethod(this, config));
         }
 
-        for (RestResourceConfig config : resourceConfig.getResourceList()) {
+        for (RestResourceConfig config : Arrays.asList(resourceConfig.getResourceArray())) {
             resources.add(new RestResource(this, config));
         }
 
-        for (OldRestRequestConfig config : resourceConfig.getRequestList()) {
+        for (OldRestRequestConfig config : Arrays.asList(resourceConfig.getRequestArray())) {
             RestRequestConverter.convert(this, config);
         }
         resourceConfig.setRequestArray(new OldRestRequestConfig[]{});
--- a/soapui/src/main/java/com/eviware/soapui/impl/settings/XmlBeansSettingsImpl.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/settings/XmlBeansSettingsImpl.java
@@ -24,6 +24,7 @@
 import com.eviware.soapui.support.types.StringToStringMap;
 
 import java.util.Collections;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
@@ -50,7 +51,7 @@
         this.config = config;
         this.parent = parent;
 
-        List<SettingConfig> settingList = config.getSettingList();
+        List<SettingConfig> settingList = Arrays.asList(config.getSettingArray());
         for (SettingConfig setting : settingList) {
             values.put(setting.getId(), setting);
         }
@@ -173,7 +174,7 @@
 
     public void clearSetting(String id) {
         if (values.containsKey(id)) {
-            int ix = config.getSettingList().indexOf(values.get(id));
+            int ix = Arrays.asList(config.getSettingArray()).indexOf(values.get(id));
             config.removeSetting(ix);
             values.remove(id);
             valueCache.remove(id);
@@ -214,7 +215,7 @@
     public void setConfig(SettingsConfig soapuiSettings) {
         StringToStringMap changed = new StringToStringMap();
 
-        for (SettingConfig config : soapuiSettings.getSettingList()) {
+        for (SettingConfig config : Arrays.asList(soapuiSettings.getSettingArray())) {
             if (!config.getStringValue().equals(getString(config.getId(), null))) {
                 changed.put(config.getId(), getString(config.getId(), null));
             }
@@ -223,7 +224,7 @@
         values.clear();
 
         config.set(soapuiSettings);
-        List<SettingConfig> settingList = config.getSettingList();
+        List<SettingConfig> settingList = Arrays.asList(config.getSettingArray());
         for (SettingConfig setting : settingList) {
             values.put(setting.getId(), setting);
         }
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/support/wss/OutgoingWss.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/support/wss/OutgoingWss.java
@@ -17,6 +17,7 @@
 package com.eviware.soapui.impl.wsdl.support.wss;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 
 import org.apache.ws.security.WSSecurityException;
@@ -51,7 +52,7 @@
         this.config = config;
         this.container = container;
 
-        for (WSSEntryConfig entryConfig : config.getEntryList()) {
+        for (WSSEntryConfig entryConfig : Arrays.asList(config.getEntryArray())) {
 
             WssEntry entry = WssEntryRegistry.get().build(entryConfig, this);
             if (entry != null) {
@@ -130,15 +131,15 @@
             entries.set(indexBeforeMove + offset, entry);
             entries.set(indexBeforeMove, adjacentEntry);
 
-            WSSEntryConfig entryConfig = (WSSEntryConfig) config.getEntryList().get(indexBeforeMove).copy();
-            WSSEntryConfig adjacentEntryConfig = (WSSEntryConfig) config.getEntryList().get(indexBeforeMove + offset)
+            WSSEntryConfig entryConfig = (WSSEntryConfig) Arrays.asList(config.getEntryArray()).get(indexBeforeMove).copy();
+            WSSEntryConfig adjacentEntryConfig = (WSSEntryConfig) Arrays.asList(config.getEntryArray()).get(indexBeforeMove + offset)
                     .copy();
 
-            config.getEntryList().set(indexBeforeMove + offset, entryConfig);
-            config.getEntryList().set(indexBeforeMove, adjacentEntryConfig);
+            Arrays.asList(config.getEntryArray()).set(indexBeforeMove + offset, entryConfig);
+            Arrays.asList(config.getEntryArray()).set(indexBeforeMove, adjacentEntryConfig);
 
-            entry.updateEntryConfig(config.getEntryList().get(indexBeforeMove + offset));
-            adjacentEntry.updateEntryConfig(config.getEntryList().get(indexBeforeMove));
+            entry.updateEntryConfig(Arrays.asList(config.getEntryArray()).get(indexBeforeMove + offset));
+            adjacentEntry.updateEntryConfig(Arrays.asList(config.getEntryArray()).get(indexBeforeMove));
 
             container.fireWssEntryMoved(entry, offset);
         }
--- a/soapui/src/main/java/com/eviware/soapui/impl/wadl/inference/schema/Schema.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wadl/inference/schema/Schema.java
@@ -17,6 +17,7 @@
 package com.eviware.soapui.impl.wadl.inference.schema;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -75,13 +76,13 @@
         prefixes = new HashMap<String, String>();
         particles = new ArrayList<Particle>();
         types = new HashMap<String, ComplexType>();
-        for (MapEntryConfig entry : xml.getPrefixList()) {
+        for (MapEntryConfig entry : Arrays.asList(xml.getPrefixArray())) {
             prefixes.put(entry.getKey(), entry.getValue());
         }
-        for (ParticleConfig item : xml.getParticleList()) {
+        for (ParticleConfig item : Arrays.asList(xml.getParticleArray())) {
             particles.add(Particle.Factory.parse(item, this));
         }
-        for (ComplexTypeConfig item : xml.getComplexTypeList()) {
+        for (ComplexTypeConfig item : Arrays.asList(xml.getComplexTypeArray())) {
             types.put(item.getName(), new ComplexType(item, this));
         }
     }
--- a/soapui/src/main/java/com/eviware/soapui/impl/wadl/inference/schema/types/ComplexType.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wadl/inference/schema/types/ComplexType.java
@@ -17,6 +17,7 @@
 package com.eviware.soapui.impl.wadl.inference.schema.types;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -72,7 +73,7 @@
         mixed = xml.getMixed();
         content = Content.Factory.parse(xml.getContent(), schema);
         attributes = new HashMap<QName, Particle>();
-        for (ParticleConfig item : xml.getAttributeList()) {
+        for (ParticleConfig item : Arrays.asList(xml.getAttributeArray())) {
             Particle p = Particle.Factory.parse(item, schema);
             attributes.put(new QName("", p.getName().getLocalPart()), p);
         }
--- a/soapui/src/main/java/com/eviware/soapui/impl/wadl/inference/schema/SchemaSystem.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wadl/inference/schema/SchemaSystem.java
@@ -16,6 +16,7 @@
 
 package com.eviware.soapui.impl.wadl.inference.schema;
 
+import java.util.Arrays;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.Set;
@@ -52,7 +53,7 @@
      */
     public SchemaSystem(SchemaSetConfig xml) {
         schemas = new LinkedHashMap<String, Schema>();
-        for (SchemaConfig item : xml.getSchemaList()) {
+        for (SchemaConfig item : Arrays.asList(xml.getSchemaArray())) {
             schemas.put(item.getNamespace(), new Schema(item, this));
         }
     }
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/WsdlProject.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/WsdlProject.java
@@ -1688,17 +1688,16 @@
 			 * 
 			 * Here needs to be done for all test cases separatly.
 			 */
-            for (int cnt2 = 0; cnt2 < config.getTestCaseList().size(); cnt2++) {
-                TestCaseConfig newTestCase = config.getTestCaseList().get(cnt2);
+            for (int cnt2 = 0; cnt2 < config.getTestCaseArray().length; cnt2++) {
+                TestCaseConfig newTestCase = config.getTestCaseArray()[cnt2];
                 TestCaseConfig importTestCaseConfig = newTestSuiteConfig.getTestSuite().getTestCaseList().get(cnt2);
                 LinkedHashMap<String, String> oldNewIds = new LinkedHashMap<String, String>();
-                for (int cnt = 0; cnt < importTestCaseConfig.getTestStepList().size(); cnt++) {
-                    oldNewIds.put(importTestCaseConfig.getTestStepList().get(cnt).getId(), newTestCase.getTestStepList()
-                            .get(cnt).getId());
+                for (int cnt = 0; cnt < importTestCaseConfig.getTestStepArray().length; cnt++) {
+                    oldNewIds.put(importTestCaseConfig.getTestStepArray()[cnt].getId(), newTestCase.getTestStepArray()[cnt].getId());
                 }
 
-                for (SecurityTestConfig scan : newTestCase.getSecurityTestList()) {
-                    for (TestStepSecurityTestConfig secStepConfig : scan.getTestStepSecurityTestList()) {
+                for (SecurityTestConfig scan : Arrays.asList(newTestCase.getSecurityTestArray())) {
+                    for (TestStepSecurityTestConfig secStepConfig : Arrays.asList(scan.getTestStepSecurityTestArray())) {
                         if (oldNewIds.containsKey(secStepConfig.getTestStepId())) {
                             secStepConfig.setTestStepId(oldNewIds.get(secStepConfig.getTestStepId()));
                         }
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/endpoint/DefaultEndpointStrategy.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/endpoint/DefaultEndpointStrategy.java
@@ -23,6 +23,7 @@
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.HashSet;
+import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
@@ -96,7 +97,7 @@
         config = (DefaultEndpointStrategyConfig) projectConfig.getEndpointStrategy().changeType(
                 DefaultEndpointStrategyConfig.type);
 
-        for (EndpointConfig endpointConfig : config.getEndpointList()) {
+        for (EndpointConfig endpointConfig : Arrays.asList(config.getEndpointArray())) {
             if (!endpointConfig.isSetMode()) {
                 endpointConfig.setMode(EndpointConfig.Mode.COMPLEMENT);
             }
@@ -125,10 +126,15 @@
                 }
             }
 
+            List<EndpointConfig> list = Arrays.asList(config.getEndpointArray());
+
             for (String key : keys) {
                 EndpointDefaults def = defaults.remove(key);
-                config.getEndpointList().remove(def);
+                list.remove(def);
             }
+
+            EndpointConfig[] arrays = new EndpointConfig[list.size()];
+            config.setEndpointArray(list.toArray(arrays));
         }
     }
 
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlRunTestCaseTestStep.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlRunTestCaseTestStep.java
@@ -132,7 +132,7 @@
     }
 
     public StringList getReturnProperties() {
-        return new StringList(stepConfig.getReturnProperties().getEntryList());
+        return new StringList(stepConfig.getReturnProperties().getEntryArray());
     }
 
     public void setReturnProperties(StringList returnProperties) {
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlMockResponseTestStep.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/teststeps/WsdlMockResponseTestStep.java
@@ -213,7 +213,7 @@
             }
 
             public List<TestAssertionConfig> getAssertionList() {
-                return mockResponseStepConfig.getAssertionList();
+                return Arrays.asLIst(mockResponseStepConfig.getAssertionArray());
             }
 
             public void removeAssertion(int ix) {
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/support/wss/DefaultWssContainer.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/support/wss/DefaultWssContainer.java
@@ -18,6 +18,7 @@
 
 import java.security.Security;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
@@ -53,15 +54,15 @@
         this.modelItem = modelItem;
         this.config = config;
 
-        for (KeyMaterialCryptoConfig cryptoConfig : config.getCryptoList()) {
+        for (KeyMaterialCryptoConfig cryptoConfig : Arrays.asList(config.getCryptoArray())) {
             cryptos.add(new KeyMaterialWssCrypto(cryptoConfig, this));
         }
 
-        for (IncomingWssConfig wssConfig : config.getIncomingList()) {
+        for (IncomingWssConfig wssConfig : Arrays.asList(config.getIncomingArray())) {
             incomingWssConfigs.add(new IncomingWss(wssConfig, this));
         }
 
-        for (OutgoingWssConfig wssConfig : config.getOutgoingList()) {
+        for (OutgoingWssConfig wssConfig : Arrays.asList(config.getOutgoingArray())) {
             outgoingWssConfigs.add(new OutgoingWss(wssConfig, this));
         }
     }
--- a/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/dispatch/QueryMatchMockOperationDispatcher.java
+++ b/soapui/src/main/java/com/eviware/soapui/impl/wsdl/mock/dispatch/QueryMatchMockOperationDispatcher.java
@@ -49,6 +49,7 @@
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -74,7 +75,7 @@
         try {
             conf = MockOperationQueryMatchDispatchConfig.Factory.parse(((WsdlMockOperation) mockOperation).getConfig().getDispatchConfig().xmlText());
 
-            for (MockOperationQueryMatchDispatchConfig.Query query : conf.getQueryList()) {
+            for (MockOperationQueryMatchDispatchConfig.Query query : Arrays.asList(conf.getQueryArray())) {
                 queries.add(new Query(query));
             }
         } catch (XmlException e) {
--- a/soapui/src/main/java/com/eviware/soapui/security/ui/InvalidTypesTable.java
+++ b/soapui/src/main/java/com/eviware/soapui/security/ui/InvalidTypesTable.java
@@ -167,7 +167,7 @@
                 selectedRows[i] = table.convertRowIndexToModel(selectedRows[i]);
             }
             for (int index : selectedRows) {
-                toRemove.add(data.getTypesListList().get(index));
+                toRemove.add(data.getTypesListArray()[index]);
             }
             data.getTypesListList().removeAll(toRemove);
             fireTableDataChanged();
@@ -188,7 +188,7 @@
 
         @Override
         public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
-            SchemaTypeForSecurityScanConfig paramType = data.getTypesListList().get(rowIndex);
+            SchemaTypeForSecurityScanConfig paramType =data.getTypesListArray()[rowIndex];
 
             paramType.setValue((String) aValue);
 
@@ -207,18 +207,18 @@
 
         @Override
         public int getRowCount() {
-            if (data.getTypesListList() == null) {
+            if (data.getTypesListArray() == null) {
                 return 0;
             }
-            return data.getTypesListList().size();
+            return data.getTypesListArray().length;
         }
 
         @Override
         public Object getValueAt(int rowIndex, int columnIndex) {
             if (columnIndex == 0) {
-                return getTypeName(data.getTypesListList().get(rowIndex).getType());
+                return getTypeName(data.getTypesListArray()[rowIndex].getType());
             } else {
-                return data.getTypesListList().get(rowIndex).getValue();
+                return data.getTypesListArray()[rowIndex].getValue();
             }
         }
 
--- a/soapui/src/main/java/com/eviware/soapui/security/ui/MaliciousAttachmentMutationsPanel.java
+++ b/soapui/src/main/java/com/eviware/soapui/security/ui/MaliciousAttachmentMutationsPanel.java
@@ -69,6 +69,9 @@
 import java.awt.event.ActionEvent;
 import java.io.File;
 
+import java.util.Arrays;
+import java.util.List;
+
 public class MaliciousAttachmentMutationsPanel {
     private JFormDialog dialog;
     private MaliciousAttachmentSecurityScanConfig config;
@@ -125,7 +128,7 @@
                     ListModel listModel = holder.getFilesList().getList().getModel();
                     String key = ((AttachmentElement) listModel.getElementAt(idx)).getId();
 
-                    for (MaliciousAttachmentElementConfig element : config.getElementList()) {
+                    for (MaliciousAttachmentElementConfig element : Arrays.asList(config.getElementArray())) {
                         if (key.equals(element.getKey())) {
                             element.setRemove(Boolean.parseBoolean(newValue));
                             break;
@@ -308,7 +311,7 @@
                     ListModel listModel = holder.getFilesList().getList().getModel();
                     String key = ((AttachmentElement) listModel.getElementAt(idx)).getId();
 
-                    for (MaliciousAttachmentElementConfig element : config.getElementList()) {
+                    for (MaliciousAttachmentElementConfig element : Arrays.asList(config.getElementArray())) {
                         if (key.equals(element.getKey())) {
                             MaliciousAttachmentConfig att = element.addNewReplaceAttachment();
                             att.setFilename(filename);
@@ -373,7 +376,7 @@
                         ListModel listModel = holder.getFilesList().getList().getModel();
                         String key = ((AttachmentElement) listModel.getElementAt(idx)).getId();
 
-                        for (MaliciousAttachmentElementConfig element : config.getElementList()) {
+                        for (MaliciousAttachmentElementConfig element : Arrays.asList(config.getElementArray())) {
                             if (key.equals(element.getKey())) {
                                 MaliciousAttachmentConfig att = element.addNewGenerateAttachment();
                                 att.setFilename(filename);
@@ -421,11 +424,14 @@
                     ListModel listModel = holder.getFilesList().getList().getModel();
                     String key = ((AttachmentElement) listModel.getElementAt(idx)).getId();
 
-                    for (int i = 0; i < config.getElementList().size(); i++) {
-                        MaliciousAttachmentElementConfig element = config.getElementList().get(i);
+                    for (int i = 0; i < config.getElementArray().length; i++) {
+                        MaliciousAttachmentElementConfig element = config.getElementArray()[i];
 
                         if (key.equals(element.getKey())) {
-                            element.getReplaceAttachmentList().remove(row);
+                            List<MaliciousAttachmentConfig> list = Arrays.asList(element.getReplaceAttachmentArray());
+                            list.remove(row);
+                            MaliciousAttachmentConfig[] arrays = new MaliciousAttachmentConfig[list.size()];
+                            element.setReplaceAttachmentArray(list.toArray(arrays));
                         }
                     }
                 }
@@ -456,11 +462,14 @@
                     ListModel listModel = holder.getFilesList().getList().getModel();
                     String key = ((AttachmentElement) listModel.getElementAt(idx)).getId();
 
-                    for (int i = 0; i < config.getElementList().size(); i++) {
-                        MaliciousAttachmentElementConfig element = config.getElementList().get(i);
+                    for (int i = 0; i < config.getElementArray().length; i++) {
+                        MaliciousAttachmentElementConfig element = config.getElementArray()[i];
 
                         if (key.equals(element.getKey())) {
-                            element.getGenerateAttachmentList().remove(row);
+                            List<MaliciousAttachmentConfig> list = Arrays.asList(element.getGenerateAttachmentArray());
+                            list.remove(row);
+                            MaliciousAttachmentConfig[] arrays = new MaliciousAttachmentConfig[list.size()];
+                            element.setGenerateAttachmentArray(list.toArray(arrays));
                         }
                     }
                 }
